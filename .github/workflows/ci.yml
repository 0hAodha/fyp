name: Continuous Integration / Continuous Deployment

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.13]

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Python
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r server/src/requirements.txt

      # Set AWS region and mock credentials
      - name: Configure AWS Credentials for Tests
        run: |
          echo "Setting AWS region and mock credentials..."
          export AWS_REGION=us-east-1
          export AWS_ACCESS_KEY_ID=fake_access_key
          export AWS_SECRET_ACCESS_KEY=fake_secret_key
          export AWS_DEFAULT_REGION=us-east-1

      # Run tests and generate coverage report
      - name: Run tests with coverage
        run: |
          export PYTHONPATH=$(pwd)/server/src
          pytest --cov=src/functions --cov=server/src --cov-report=term-missing --cov-report=xml --cov-report=html

      # Upload coverage report as an artifact
      - name: Upload coverage report (HTML)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-html
          path: htmlcov/

      # Upload XML coverage report for CI tools
      - name: Upload coverage report (XML)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-xml
          path: coverage.xml

      # Show coverage summary in logs
      - name: Show coverage summary
        run: cat coverage.xml


  # Step 2: Continuous Deployment (CD) - Deploy multiple AWS Lambda functions
  deploy:
    needs: test  # Ensures deployment happens only if tests pass
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'  # Deploy only from main branch

    strategy:
      matrix:
        function_name: [permanent_data, transient_data, return_all_data, return_newest_data, return_luas_data, return_station_data]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      # Install AWS CLI manually
      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli

      # Configure AWS credentials
      - name: Configure AWS CLI
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region ${{ secrets.AWS_REGION }}

      # Install dependencies for Lambda function
      - name: Install dependencies
        run: |
          mkdir -p package/
          pip install -r server/src/requirements.txt -t package/
          cp -r package/* server/src/functions/${{ matrix.function_name }}/

      # Zip each Lambda function separately
      - name: Zip Lambda function
        run: |
          cd server/src/functions/${{ matrix.function_name }}/
          zip -r ../../../../${{ matrix.function_name }}.zip . -x "*.git*" "*tests*" "*.github*" "*README.md*" "requirements.txt"

      # Deploy Lambda function using AWS CLI
      - name: Deploy to AWS Lambda
        run: |
          aws lambda update-function-code --function-name ${{ matrix.function_name }} --zip-file fileb://${{ matrix.function_name }}.zip
